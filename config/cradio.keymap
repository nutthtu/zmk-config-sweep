// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q  &kp W  &kp E  &kp R           &kp T          &kp Y            &kp U   &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F           &kp G          &kp H            &kp J   &kp K      &kp L    &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V           &kp B          &kp N            &kp M   &kp COMMA  &kp DOT  &kp SLASH
                     &kp LEFT_SHIFT  &lt 4 SPACE    &lt 5 BACKSPACE  &to 1
            >;
        };

        KB_Movement {
            bindings = <
&kp BSPC      &kp HOME      &kp UP        &kp END       &kp PG_UP       &none   &kp K_COPY    &kp K_PASTE   &kp K_CUT   &default_report
&bt BT_SEL 4  &kp LEFT      &kp DOWN      &kp RIGHT     &kp PG_DN       &none   &kp LEFT_ALT  &kp LEFT_GUI  &kp LCTRL   &kp LEFT_SHIFT
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &none   &kp K_UNDO    &kp K_AGAIN   &kp K_FIND  &studio_unlock
                                          &to 0        &trans          &trans  &to 2
            >;
        };

        Mouse_Movement {
            bindings = <
&none           &none      &none         &kp K_MUTE    &kp K_VOL_UP         &kp C_BRIGHTNESS_INC  &msc SCRL_UP  &mmv MOVE_UP  &msc SCRL_DOWN  &msc SCRL_LEFT
&kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &kp K_VOLUME_DOWN    &kp C_BRI_DEC         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT
&trans          &mkp RCLK     &mkp MCLK        &mkp LCLK        &kp K_BACK           &kp K_FORWARD         &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans
                                         &to 0        &mkp LCLK               &mkp RCLK                &to 3
            >;
        };

        Functions {
            bindings = <
&kp F1     &kp F2     &kp F3    &kp F4    &kp F5         &kp F6           &kp F7    &kp F8    &kp F9     &kp F10
&kp N1     &kp N2     &kp N3    &kp N4    &kp N5         &kp N6           &kp N7    &kp N8    &kp N9     &kp N0
&kp LSHFT  &kp LCTRL  &kp LGUI  &kp LALT  &kp F11        &kp F12          &kp LALT  &kp LGUI  &kp LCTRL  &kp LSHFT
                                &to 0    &lt 4 SPACE    &lt 5 BACKSPACE  &to 0
            >;
        };

        L_layer {
            bindings = <
&kp NUMBER_1  &kp N2        &kp N3        &kp N4    &kp N5       &trans    &trans   &trans  &trans  &trans
&kp LS(EXCL)  &kp LS(LPAR)  &kp LS(RPAR)  &kp TAB   &kp GRAVE    &trans    &trans   &trans  &trans  &trans
&kp LSHFT     &kp LCTRL     &kp LGUI      &kp LALT  &kp ESC      &trans    &trans   &trans  &trans  &trans
                                          &none     &trans       &kp BSPC  &kp DEL
            >;
        };

        R_layer {
            bindings = <
&trans  &trans  &trans  &trans     &trans       &kp N6     &kp N7    &kp N8    &kp N9     &kp N0
&trans  &trans  &trans  &trans     &trans       &kp MINUS  &kp RET   &kp SEMI  &kp LBKT   &kp RBKT
&trans  &trans  &trans  &trans     &trans       &kp EQUAL  &kp LALT  &kp LGUI  &kp LCTRL  &kp BSLH
                        &kp LSHFT  &kp SPACE    &trans     &none
            >;
        };
    };
};
