// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        Minus {
            bindings = <&kp MINUS>;
            key-positions = <3 6>;
        };

        ESCape {
            bindings = <&kp ESCAPE>;
            key-positions = <10 19>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <20 29>;
        };

        under {
            bindings = <&kp UNDERSCORE>;
            key-positions = <23 26>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q           &kp W           &kp E             &kp R        &kp T          &kp Y        &kp U                &kp I              &kp O            &kp P
&mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LCTRL F  &kp G          &kp H        &mt RCTRL J          &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RIGHT_WIN SEMICOLON
&kp Z           &kp X           &kp C             &kp V        &kp B          &kp N        &kp M                &kp COMMA          &kp DOT          &kp SLASH
                                                  &lt 3 TAB    &lt 1 SPACE    &lt 2 ENTER  &lt 5 LG(BACKSPACE)
            >;
        };

        NAV {
            bindings = <
&kp HOME  &kp UP    &kp END    &kp PG_UP  &kp PRINTSCREEN    &kp TILDE  &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &kp CAPS           &kp LEFT   &kp DOWN          &kp UP_ARROW       &kp RIGHT             &none
&none     &none     &none      &none      &none              &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LESS_THAN         &kp GREATER_THAN
                               &none      &trans             &mo 4      &none
            >;
        };

        SYM {
            bindings = <
&none          &none          &kp LS(STAR)   &kp LS(AMPS)  &none           &none      &none  &none  &none  &none
&kp LS(DQT)    &kp LS(CARET)  &kp LS(PRCNT)  &kp LS(DLLR)  &kp LS(PLUS)    &kp EQUAL  &none  &none  &none  &none
&kp LS(TILDE)  &kp LS(POUND)  &kp LS(AT)     &kp LS(EXCL)  &kp LS(PIPE)    &none      &none  &none  &none  &none
                                             &none         &none           &trans     &none
            >;
        };

        NUM {
            bindings = <
&none  &none  &none  &none   &none    &none   &kp N7        &kp N8        &kp N9        &none
&none  &none  &none  &none   &none    &none   &kp NUMBER_4  &kp N5        &kp N6        &none
&none  &none  &none  &none   &none    &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none
                     &trans  &none    &none   &none
            >;
        };

        CONNECT {
            bindings = <
&bt BT_SEL 0  &bt BT_CLR  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 1  &trans      &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&bt BT_SEL 2  &trans      &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                  &trans  &trans    &trans  &trans
            >;
        };

        Fn {
            bindings = <
&kp F10  &kp F7  &kp F8  &kp F9  &kp LGUI     &trans  &trans     &trans     &trans    &trans
&kp F11  &kp F4  &kp F5  &kp F6  &kp LCTRL    &trans  &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI
&kp F12  &kp F1  &kp F2  &kp F3  &kp LALT     &trans  &trans     &trans     &trans    &trans
                         &trans  &trans       &trans  &trans
            >;
        };
    };
};
